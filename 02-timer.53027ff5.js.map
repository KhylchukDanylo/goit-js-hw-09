{"mappings":"oeAAA,IAAAA,EAAAC,EAAA,SAGA,MAAMC,EAAgBC,SAASC,cAAc,sBACvCC,EAAWF,SAASC,cAAc,eAClCE,EAAYH,SAASC,cAAc,gBACnCG,EAAcJ,SAASC,cAAc,kBACrCI,EAAcL,SAASC,cAAc,kBAQ3C,SAASK,EAAeC,GACtB,OAAOC,OAAOD,GAAOE,SAAS,EAAG,KARjBT,SAASU,iBAAiB,UAClCC,SACRC,GAAYA,EAAQC,YAAcD,EAAQC,YAAYC,gBAGxDf,EAAcgB,aAAa,YAAY,GAsBvChB,EAAciB,iBAAiB,SAoB/B,WACEjB,EAAcgB,aAAa,YAAY,GACvC,MAAME,EAAaC,aAAY,KAG7B,GAFAC,EAAU,IAAIC,MAETrB,EAAcsB,aAAa,aAAeC,GAAYH,EAEzD,YADAI,cAAcN,GAGhB,MAAMO,EA7CV,SAAmBC,GACjB,MACMC,EAASC,IACTC,EAAOF,KACPG,EAAa,GAAPD,EASZ,MAAO,C,KAPMtB,EAAewB,KAAKC,MAAMN,EAAKI,I,MAC9BvB,EAAewB,KAAKC,MAAMN,EAAMI,EAAOD,I,QACrCtB,EAAewB,KAAKC,MAAMN,EAAOI,EAAOD,EAAQF,I,QAChDpB,EACdwB,KAAKC,MAAMN,EAAQI,EAAOD,EAAQF,EATrB,OA4CGM,CAA4BV,EAAUH,GAoB1D,IAAcc,GAQd,SAAoBC,GAClBhC,EAASW,YAAcqB,EAASC,KAChChC,EAAUU,YAAcqB,EAASE,MACjChC,EAAYS,YAAcqB,EAASG,QACnChC,EAAYQ,YAAcqB,EAASI,QA7BjCC,GAiBUN,EAnBYT,GAoBjBW,KAAO3B,OAAOyB,EAAOE,MAAM1B,SAAS,EAAG,KAC9CwB,EAAOG,MAAQ5B,OAAOyB,EAAOG,OAAO3B,SAAS,EAAG,KAChDwB,EAAOI,QAAU7B,OAAOyB,EAAOI,SAAS5B,SAAS,EAAG,KACpDwB,EAAOK,QAAU9B,OAAOyB,EAAOK,SAAS7B,SAAS,EAAG,KAC7CwB,MArBJ,QA/BL,IAAIX,EAAW,KACXH,EAAU,KAEd,MAAMqB,EAAU,CACdC,YAAY,EACZC,WAAW,EACXC,YAAa,IAAIvB,KACjBwB,gBAAiB,EACjBC,UAAU,EACVC,UAAW,SACXC,WAAY,QACZC,QAAQC,GACN3B,EAAW2B,EAAc,GAyB3BlD,EAAcgB,aAAa,YAAY,GACnCO,EAAWH,EACbpB,EAAcmD,gBAAgB,YAG9BC,OAAOC,MAAM,yCARN,EAAAvD,EAAAwD,SAAU,mBAAoB,IAAKb","sources":["src/js/02-timer.js"],"sourcesContent":["import flatpickr from 'flatpickr';\nimport 'flatpickr/dist/flatpickr.min.css';\n\nconst btnStartTimer = document.querySelector('button[data-start]');\nconst dateDays = document.querySelector('[data-days]');\nconst dataHours = document.querySelector('[data-hours]');\nconst dataMinutes = document.querySelector('[data-minutes]');\nconst dataSeconds = document.querySelector('[data-seconds]');\nconst textLabel = document.querySelectorAll('.label');\ntextLabel.forEach(\n  element => (element.textContent = element.textContent.toUpperCase())\n);\n\nbtnStartTimer.setAttribute('disabled', true);\n\nfunction addLeadingZero(value) {\n  return String(value).padStart(2, '0');\n}\n\nfunction convertMs(ms) {\n  const second = 1000;\n  const minute = second * 60;\n  const hour = minute * 60;\n  const day = hour * 24;\n\n  const days = addLeadingZero(Math.floor(ms / day));\n  const hours = addLeadingZero(Math.floor((ms % day) / hour));\n  const minutes = addLeadingZero(Math.floor(((ms % day) % hour) / minute));\n  const seconds = addLeadingZero(\n    Math.floor((((ms % day) % hour) % minute) / second)\n  );\n\n  return { days, hours, minutes, seconds };\n}\n\nbtnStartTimer.addEventListener('click', onClickStartTimer);\n\nlet userTime = null;\nlet newTime = null;\n\nconst options = {\n  enableTime: true,\n  time_24hr: true,\n  defaultDate: new Date(),\n  minuteIncrement: 1,\n  altInput: true,\n  altFormat: 'F j, Y',\n  dateFormat: 'Y-m-d',\n  onClose(selectedDates) {\n    userTime = selectedDates[0];\n\n    onInput(selectedDates);\n  },\n};\n\nfunction onClickStartTimer() {\n  btnStartTimer.setAttribute('disabled', true);\n  const intervalId = setInterval(() => {\n    newTime = new Date();\n\n    if (!btnStartTimer.hasAttribute('disabled') || userTime <= newTime) {\n      clearInterval(intervalId);\n      return;\n    }\n    const arrDate = convertMs(comparisonDateNum(userTime, newTime));\n    const dateUser = name(arrDate);\n\n    setNewDate(dateUser);\n  }, 1000);\n}\n\nconst fp = flatpickr('#datetime-picker', { ...options });\n\nfunction onInput() {\n  btnStartTimer.setAttribute('disabled', true);\n  if (userTime > newTime) {\n    btnStartTimer.removeAttribute('disabled');\n    return;\n  } else {\n    window.alert('Please choose a date in the future');\n    return;\n  }\n}\n\nfunction name(params) {\n  params.days = String(params.days).padStart(2, '0');\n  params.hours = String(params.hours).padStart(2, '0');\n  params.minutes = String(params.minutes).padStart(2, '0');\n  params.seconds = String(params.seconds).padStart(2, '0');\n  return params;\n}\n\nfunction setNewDate(dateUser) {\n  dateDays.textContent = dateUser.days;\n  dataHours.textContent = dateUser.hours;\n  dataMinutes.textContent = dateUser.minutes;\n  dataSeconds.textContent = dateUser.seconds;\n}\n\nfunction comparisonDateNum(andTime, now) {\n  return andTime - now;\n}\n"],"names":["$fbklV","parcelRequire","$40d383fb392a7037$var$btnStartTimer","document","querySelector","$40d383fb392a7037$var$dateDays","$40d383fb392a7037$var$dataHours","$40d383fb392a7037$var$dataMinutes","$40d383fb392a7037$var$dataSeconds","$40d383fb392a7037$var$addLeadingZero","value","String","padStart","querySelectorAll","forEach","element","textContent","toUpperCase","setAttribute","addEventListener","intervalId","setInterval","$40d383fb392a7037$var$newTime","Date","hasAttribute","$40d383fb392a7037$var$userTime","clearInterval","arrDate","ms","minute","second","hour","day","Math","floor","$40d383fb392a7037$var$convertMs","params","dateUser","days","hours","minutes","seconds","$40d383fb392a7037$var$setNewDate","$40d383fb392a7037$var$options","enableTime","time_24hr","defaultDate","minuteIncrement","altInput","altFormat","dateFormat","onClose","selectedDates","removeAttribute","window","alert","default"],"version":3,"file":"02-timer.53027ff5.js.map"}