{"mappings":"oeAAA,IAAAA,EAAAC,EAAA,SAGA,MAAMC,EAAgBC,SAASC,cAAc,sBACvCC,EAAWF,SAASC,cAAc,eAClCE,EAAYH,SAASC,cAAc,gBACnCG,EAAcJ,SAASC,cAAc,kBACrCI,EAAcL,SAASC,cAAc,kBACzBD,SAASM,iBAAiB,UAI5C,SAASC,EAAeC,GACtB,OAAOC,OAAOD,GAAOE,SAAS,EAAG,KAHnCX,EAAcY,aAAa,YAAY,GAsBvC,MAAMC,EAAU,CACdC,YAAY,EACZC,WAAW,EACXC,YAAa,IAAIC,KACjBC,gBAAiB,EACjBC,UAAU,EACVC,UAAW,SACXC,WAAY,QACZC,QAAQC,GAwBV,IAAiBC,EAvBbxB,EAAcyB,iBAAiB,SAE/B,SAA2BC,GACzB1B,EAAcY,aAAa,YAAY,GACvC,MAAMe,EAAaC,aAAY,KAC7B,IACG5B,EAAc6B,aAAa,aAC5BC,EAAkBP,IAAkB,EAGpC,YADAQ,cAAcJ,GAGhB,MAAMK,EArCd,SAAmBC,GACjB,MACMC,EAASC,IACTC,EAAOF,KACPG,EAAa,GAAPD,EASZ,MAAO,C,KAPM5B,EAAe8B,KAAKC,MAAMN,EAAKI,I,MAC9B7B,EAAe8B,KAAKC,MAAMN,EAAMI,EAAOD,I,QACrC5B,EAAe8B,KAAKC,MAAMN,EAAOI,EAAOD,EAAQF,I,QAChD1B,EACd8B,KAAKC,MAAMN,EAAQI,EAAOD,EAAQF,EATrB,OAoCOM,CAAUV,EAAkBP,IACtCkB,IAqBAC,EArBgBV,GAsBrBW,KAAOjC,OAAOgC,EAAOC,MAAMhC,SAAS,EAAG,KAC9C+B,EAAOE,MAAQlC,OAAOgC,EAAOE,OAAOjC,SAAS,EAAG,KAChD+B,EAAOG,QAAUnC,OAAOgC,EAAOG,SAASlC,SAAS,EAAG,KACpD+B,EAAOI,QAAUpC,OAAOgC,EAAOI,SAASnC,SAAS,EAAG,KAC7C+B,GALT,IAAcA,EApBNK,QAAQC,MA4BhB,SAAoBP,GAClBtC,EAAS8C,YAAcR,EAASE,KAChCvC,EAAU6C,YAAcR,EAASG,MACjCvC,EAAY4C,YAAcR,EAASI,QACnCvC,EAAY2C,YAAcR,EAASK,QA/B7BI,CAAWT,KACV,QAOQjB,EAtBLD,EAuBVvB,EAAcY,aAAa,YAAY,GACnCkB,EAAkBN,GAAK,EACzBxB,EAAcmD,gBAAgB,YAG9BC,OAAOC,MAAM,yCARN,EAAAvD,EAAAwD,SAAU,mBAAoB,IAAKzC,IA4B9C,SAASiB,EAAkByB,GACzB,MAAMC,EAAU,IAAIvC,KAGpB,OAFgBsC,EAAW,GAEVC","sources":["src/js/02-v2.js"],"sourcesContent":["import flatpickr from 'flatpickr';\nimport 'flatpickr/dist/flatpickr.min.css';\n\nconst btnStartTimer = document.querySelector('button[data-start]');\nconst dateDays = document.querySelector('[data-days]');\nconst dataHours = document.querySelector('[data-hours]');\nconst dataMinutes = document.querySelector('[data-minutes]');\nconst dataSeconds = document.querySelector('[data-seconds]');\nconst textLabel = document.querySelectorAll('.label');\n\nbtnStartTimer.setAttribute('disabled', true);\n\nfunction addLeadingZero(value) {\n  return String(value).padStart(2, '0');\n}\n\nfunction convertMs(ms) {\n  const second = 1000;\n  const minute = second * 60;\n  const hour = minute * 60;\n  const day = hour * 24;\n\n  const days = addLeadingZero(Math.floor(ms / day));\n  const hours = addLeadingZero(Math.floor((ms % day) / hour));\n  const minutes = addLeadingZero(Math.floor(((ms % day) % hour) / minute));\n  const seconds = addLeadingZero(\n    Math.floor((((ms % day) % hour) % minute) / second)\n  );\n\n  return { days, hours, minutes, seconds };\n}\n\nconst options = {\n  enableTime: true,\n  time_24hr: true,\n  defaultDate: new Date(),\n  minuteIncrement: 1,\n  altInput: true,\n  altFormat: 'F j, Y',\n  dateFormat: 'Y-m-d',\n  onClose(selectedDates) {\n    btnStartTimer.addEventListener('click', onClickStartTimer);\n    onInput(selectedDates);\n    function onClickStartTimer(ev) {\n      btnStartTimer.setAttribute('disabled', true);\n      const intervalId = setInterval(() => {\n        if (\n          !btnStartTimer.hasAttribute('disabled') ||\n          comparisonDateNum(selectedDates) <= 0\n        ) {\n          clearInterval(intervalId);\n          return;\n        }\n        const arrDate = convertMs(comparisonDateNum(selectedDates));\n        const dateUser = name(arrDate);\n        console.log();\n        setNewDate(dateUser);\n      }, 1000);\n    }\n  },\n};\n\nconst fp = flatpickr('#datetime-picker', { ...options });\n\nfunction onInput(e) {\n  btnStartTimer.setAttribute('disabled', true);\n  if (comparisonDateNum(e) > 0) {\n    btnStartTimer.removeAttribute('disabled');\n    return;\n  } else {\n    window.alert('Please choose a date in the future');\n    return;\n  }\n}\n\nfunction name(params) {\n  params.days = String(params.days).padStart(2, '0');\n  params.hours = String(params.hours).padStart(2, '0');\n  params.minutes = String(params.minutes).padStart(2, '0');\n  params.seconds = String(params.seconds).padStart(2, '0');\n  return params;\n}\n\nfunction setNewDate(dateUser) {\n  dateDays.textContent = dateUser.days;\n  dataHours.textContent = dateUser.hours;\n  dataMinutes.textContent = dateUser.minutes;\n  dataSeconds.textContent = dateUser.seconds;\n}\n\nfunction comparisonDateNum(valueInput) {\n  const newDate = new Date();\n  const selDate = valueInput[0];\n\n  return selDate - newDate;\n}\n"],"names":["$fbklV","parcelRequire","$ac4a56e0fc373d32$var$btnStartTimer","document","querySelector","$ac4a56e0fc373d32$var$dateDays","$ac4a56e0fc373d32$var$dataHours","$ac4a56e0fc373d32$var$dataMinutes","$ac4a56e0fc373d32$var$dataSeconds","querySelectorAll","$ac4a56e0fc373d32$var$addLeadingZero","value","String","padStart","setAttribute","$ac4a56e0fc373d32$var$options","enableTime","time_24hr","defaultDate","Date","minuteIncrement","altInput","altFormat","dateFormat","onClose","selectedDates","e","addEventListener","ev","intervalId","setInterval","hasAttribute","$ac4a56e0fc373d32$var$comparisonDateNum","clearInterval","arrDate","ms","minute","second","hour","day","Math","floor","$ac4a56e0fc373d32$var$convertMs","dateUser","params","days","hours","minutes","seconds","console","log","textContent","$ac4a56e0fc373d32$var$setNewDate","removeAttribute","window","alert","default","valueInput","newDate"],"version":3,"file":"02-v2.68c625c4.js.map"}