{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,S,aAGMC,EAAgBC,SAASC,cAAc,sBACvCC,EAAWF,SAASC,cAAc,eAClCE,EAAYH,SAASC,cAAc,gBACnCG,EAAcJ,SAASC,cAAc,kBACrCI,EAAcL,SAASC,cAAc,kBACzBD,SAASM,iBAAiB,UAI5C,SAASC,EAAeC,GACtB,OAAOC,OAAOD,GAAOE,SAAS,EAAG,KAHnCX,EAAcY,aAAa,YAAY,GAsBvC,IAAMC,EAAU,CACdC,YAAY,EACZC,WAAW,EACXC,YAAa,IAAIC,KACjBC,gBAAiB,EACjBC,UAAU,EACVC,UAAW,SACXC,WAAY,QACZC,QAAA,SAAQC,GAwBV,IAAiBC,EAvBbxB,EAAcyB,iBAAiB,SAE/B,SAA2BC,GACzB1B,EAAcY,aAAa,YAAY,GACvC,IAAMe,EAAaC,aAAY,WAC7B,IACG5B,EAAc6B,aAAa,aAC5BC,EAAkBP,IAAkB,EAEpCQ,cAAcJ,OAJhB,CAOA,IArCWK,EAEXC,EACAC,EACAC,EAuDMC,EAtBAC,GArCKL,EAqCeF,EAAkBP,GAnC5CU,EAASK,IAETH,EAAa,IADbD,EAAOD,MAUN,CAAEM,KAPI/B,EAAegC,KAAKC,MAAMT,EAAKG,IAO7BO,MANDlC,EAAegC,KAAKC,MAAMT,EAAMG,EAAOD,IAM/BS,QALNnC,EAAegC,KAAKC,MAAMT,EAAOG,EAAOD,EAAQD,IAKjCW,QAJfpC,EACdgC,KAAKC,MAAMT,EAAQG,EAAOD,EAAQD,EATrB,QAqCHY,IAqBAT,EArBgBC,GAsBrBE,KAAO7B,OAAO0B,EAAOG,MAAM5B,SAAS,EAAG,KAC9CyB,EAAOM,MAAQhC,OAAO0B,EAAOM,OAAO/B,SAAS,EAAG,KAChDyB,EAAOO,QAAUjC,OAAO0B,EAAOO,SAAShC,SAAS,EAAG,KACpDyB,EAAOQ,QAAUlC,OAAO0B,EAAOQ,SAASjC,SAAS,EAAG,KAC7CyB,GAzBDU,QAAQC,MA4BhB,SAAoBF,GAClB1C,EAAS6C,YAAcH,EAASN,KAChCnC,EAAU4C,YAAcH,EAASH,MACjCrC,EAAY2C,YAAcH,EAASF,QACnCrC,EAAY0C,YAAcH,EAASD,QA/B7BK,CAAWJ,MACV,QAOQrB,EAtBLD,EAuBVvB,EAAcY,aAAa,YAAY,GACnCkB,EAAkBN,GAAK,EACzBxB,EAAckD,gBAAgB,YAG9BC,OAAOC,MAAM,yCARN,EAAAC,EAAAC,SAAU,mBAAoBC,EAAAzD,EAAA,IAAKe,IA4B9C,SAASiB,EAAkB0B,GACzB,IAAMC,EAAU,IAAIxC,KAGpB,OAFgBuC,EAAW,GAEVC,G","sources":["src/js/02-v2.js"],"sourcesContent":["import flatpickr from 'flatpickr';\nimport 'flatpickr/dist/flatpickr.min.css';\n\nconst btnStartTimer = document.querySelector('button[data-start]');\nconst dateDays = document.querySelector('[data-days]');\nconst dataHours = document.querySelector('[data-hours]');\nconst dataMinutes = document.querySelector('[data-minutes]');\nconst dataSeconds = document.querySelector('[data-seconds]');\nconst textLabel = document.querySelectorAll('.label');\n\nbtnStartTimer.setAttribute('disabled', true);\n\nfunction addLeadingZero(value) {\n  return String(value).padStart(2, '0');\n}\n\nfunction convertMs(ms) {\n  const second = 1000;\n  const minute = second * 60;\n  const hour = minute * 60;\n  const day = hour * 24;\n\n  const days = addLeadingZero(Math.floor(ms / day));\n  const hours = addLeadingZero(Math.floor((ms % day) / hour));\n  const minutes = addLeadingZero(Math.floor(((ms % day) % hour) / minute));\n  const seconds = addLeadingZero(\n    Math.floor((((ms % day) % hour) % minute) / second)\n  );\n\n  return { days, hours, minutes, seconds };\n}\n\nconst options = {\n  enableTime: true,\n  time_24hr: true,\n  defaultDate: new Date(),\n  minuteIncrement: 1,\n  altInput: true,\n  altFormat: 'F j, Y',\n  dateFormat: 'Y-m-d',\n  onClose(selectedDates) {\n    btnStartTimer.addEventListener('click', onClickStartTimer);\n    onInput(selectedDates);\n    function onClickStartTimer(ev) {\n      btnStartTimer.setAttribute('disabled', true);\n      const intervalId = setInterval(() => {\n        if (\n          !btnStartTimer.hasAttribute('disabled') ||\n          comparisonDateNum(selectedDates) <= 0\n        ) {\n          clearInterval(intervalId);\n          return;\n        }\n        const arrDate = convertMs(comparisonDateNum(selectedDates));\n        const dateUser = name(arrDate);\n        console.log();\n        setNewDate(dateUser);\n      }, 1000);\n    }\n  },\n};\n\nconst fp = flatpickr('#datetime-picker', { ...options });\n\nfunction onInput(e) {\n  btnStartTimer.setAttribute('disabled', true);\n  if (comparisonDateNum(e) > 0) {\n    btnStartTimer.removeAttribute('disabled');\n    return;\n  } else {\n    window.alert('Please choose a date in the future');\n    return;\n  }\n}\n\nfunction name(params) {\n  params.days = String(params.days).padStart(2, '0');\n  params.hours = String(params.hours).padStart(2, '0');\n  params.minutes = String(params.minutes).padStart(2, '0');\n  params.seconds = String(params.seconds).padStart(2, '0');\n  return params;\n}\n\nfunction setNewDate(dateUser) {\n  dateDays.textContent = dateUser.days;\n  dataHours.textContent = dateUser.hours;\n  dataMinutes.textContent = dateUser.minutes;\n  dataSeconds.textContent = dateUser.seconds;\n}\n\nfunction comparisonDateNum(valueInput) {\n  const newDate = new Date();\n  const selDate = valueInput[0];\n\n  return selDate - newDate;\n}\n"],"names":["$dDDEV","parcelRequire","$47aee110a86b4d70$var$btnStartTimer","document","querySelector","$47aee110a86b4d70$var$dateDays","$47aee110a86b4d70$var$dataHours","$47aee110a86b4d70$var$dataMinutes","$47aee110a86b4d70$var$dataSeconds","querySelectorAll","$47aee110a86b4d70$var$addLeadingZero","value","String","padStart","setAttribute","$47aee110a86b4d70$var$options","enableTime","time_24hr","defaultDate","Date","minuteIncrement","altInput","altFormat","dateFormat","onClose","selectedDates","e","addEventListener","ev","intervalId","setInterval","hasAttribute","$47aee110a86b4d70$var$comparisonDateNum","clearInterval","ms","minute","hour","day","params","arrDate","second","days","Math","floor","hours","minutes","seconds","dateUser","console","log","textContent","$47aee110a86b4d70$var$setNewDate","removeAttribute","window","alert","$dbdyf","default","$parcel$interopDefault","valueInput","newDate"],"version":3,"file":"02-v2.cefab370.js.map"}