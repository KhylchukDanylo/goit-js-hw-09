{"mappings":"oeAAAA,EAAA,SAGA,MAAMC,EAAYC,SAASC,cAAc,oBACnCC,EAAgBF,SAASC,cAAc,sBACvCE,EAAWH,SAASC,cAAc,eAClCG,EAAYJ,SAASC,cAAc,gBACnCI,EAAcL,SAASC,cAAc,kBACrCK,EAAcN,SAASC,cAAc,kBAmF3C,SAASM,EAAWC,GAClB,MAAMC,EAAUD,EAAQE,MAAM,KAC9B,OAAOC,OAAOF,EAAQG,KAAK,KAE7B,SAASC,IACP,MAAMC,EAAkBP,EAAWR,EAAUgB,OACvCC,EAAgBT,EAfxB,WACE,MAAMU,EAAO,IAAIC,KAKjB,MAAO,GAJaD,EAAKE,iBACRF,EAAKG,WAAa,KACnBC,OAAOJ,EAAKT,WACFc,SAAS,EAAG,OAULC,IAKjC,OAHIT,GAAmBE,GACrBQ,OAAOC,MAAM,sCAERX,EAAkBE,EA7FThB,SAAS0B,iBAAiB,UAElCC,SAAQC,IAChBA,EAAQC,YAAcD,EAAQC,YAAYC,iB,UAI5CC,CAAUhC,EAAW,IAErBA,EAAUiC,iBAAiB,SAI3B,SAAiBC,GACf/B,EAAcgC,aAAa,YAAY,GACvCC,QAAQC,MACJvB,IAAsB,GACxBX,EAAcmC,gBAAgB,eAPlCnC,EAAc8B,iBAAiB,SAW/B,SAA2BM,GACzBpC,EAAcgC,aAAa,YAAY,GACvC,MAAMK,EAAaC,aAAY,KAE7B,GADAL,QAAQC,OACHlC,EAAcuC,aAAa,YAE9B,YADAC,cAAcH,GAET,GAA4B,IAAxB1B,IAET,YADA6B,cAAcH,GAuBpB,IAAuBI,GAPvB,SAAiBC,GACfzC,EAAS0B,YAAce,EAASC,KAChCzC,EAAUyB,YAAce,EAASE,MACjCzC,EAAYwB,YAAce,EAASG,QACnCzC,EAAYuB,YAAce,EAASI,QAhBjCC,CAIJ,SAAcN,GAKZ,OAJAA,EAAOE,KAAOxB,OAAOsB,EAAOE,MAAMvB,SAAS,EAAG,KAC9CqB,EAAOG,MAAQzB,OAAOsB,EAAOG,OAAOxB,SAAS,EAAG,KAChDqB,EAAOI,QAAU1B,OAAOsB,EAAOI,SAASzB,SAAS,EAAG,KACpDqB,EAAOK,QAAU3B,OAAOsB,EAAOK,SAAS1B,SAAS,EAAG,KAC7CqB,EAVYO,CAwBrB,SAAmBC,GACjB,MAAMC,EAAS,IACTC,EAAkB,GAATD,EACTE,EAAgB,GAATD,EACPE,EAAa,GAAPD,EAENT,EAAOW,KAAKC,MAAMN,EAAKI,GAEvBT,EAAQU,KAAKC,MAAMN,EAAMI,EAAOD,GAEhCP,EAAUS,KAAKC,MAAMN,EAAOI,EAAOD,EAAQD,GAE3CL,EAAUQ,KAAKC,MAAMN,EAAQI,EAAOD,EAAQD,EAAUD,GAE5D,MAAO,C,KAAEP,E,MAAMC,E,QAAOC,E,QAASC,GAtCPU,EAoBHf,EApB2B5C,EAAUgB,MAqBlD4C,SAAW,IAAIzC,KAAKyB,GAAU,IAAIzB,WAnBvC,QAvBLhB,EAAcgC,aAAa,YAAY","sources":["src/js/02-v2.js"],"sourcesContent":["import flatpickr from 'flatpickr';\nimport 'flatpickr/dist/flatpickr.min.css';\n\nconst inputData = document.querySelector('#datetime-picker');\nconst btnStartTimer = document.querySelector('button[data-start]');\nconst dateDays = document.querySelector('[data-days]');\nconst dataHours = document.querySelector('[data-hours]');\nconst dataMinutes = document.querySelector('[data-minutes]');\nconst dataSeconds = document.querySelector('[data-seconds]');\nconst textLabel = document.querySelectorAll('.label');\n\ntextLabel.forEach(element => {\n  element.textContent = element.textContent.toUpperCase();\n});\n\nconst flatpickr = require('flatpickr');\nflatpickr(inputData, {});\n\ninputData.addEventListener('input', onInput);\nbtnStartTimer.addEventListener('click', onClickStartTimer);\nbtnStartTimer.setAttribute('disabled', true);\n\nfunction onInput(e) {\n  btnStartTimer.setAttribute('disabled', true);\n  console.log();\n  if (comparisonDateNum() > 0) {\n    btnStartTimer.removeAttribute('disabled');\n  }\n}\n\nfunction onClickStartTimer(ev) {\n  btnStartTimer.setAttribute('disabled', true);\n  const intervalId = setInterval(() => {\n    console.log();\n    if (!btnStartTimer.hasAttribute('disabled')) {\n      clearInterval(intervalId);\n      return;\n    } else if (comparisonDateNum() === 0) {\n      clearInterval(intervalId);\n      return;\n    }\n    const dateUser = name(convertMs(dateInputInMs(inputData.value)));\n    setDate(dateUser);\n  }, 1000);\n}\n\nfunction name(params) {\n  params.days = String(params.days).padStart(2, '0');\n  params.hours = String(params.hours).padStart(2, '0');\n  params.minutes = String(params.minutes).padStart(2, '0');\n  params.seconds = String(params.seconds).padStart(2, '0');\n  return params;\n}\n\nfunction setDate(dateUser) {\n  dateDays.textContent = dateUser.days;\n  dataHours.textContent = dateUser.hours;\n  dataMinutes.textContent = dateUser.minutes;\n  dataSeconds.textContent = dateUser.seconds;\n}\n\nfunction dateInputInMs(params) {\n  return (mSeconds = new Date(params) - new Date());\n}\n\nfunction convertMs(ms) {\n  const second = 1000;\n  const minute = second * 60;\n  const hour = minute * 60;\n  const day = hour * 24;\n\n  const days = Math.floor(ms / day);\n\n  const hours = Math.floor((ms % day) / hour);\n\n  const minutes = Math.floor(((ms % day) % hour) / minute);\n\n  const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n\n  return { days, hours, minutes, seconds };\n}\n\nfunction newDateToDay() {\n  const date = new Date();\n  const getFullYear = date.getFullYear();\n  const getMonth = date.getMonth() + 1;\n  const getDate = String(date.getDate());\n  const toGetDate = getDate.padStart(2, '0');\n  return `${getFullYear}-${getMonth}-${toGetDate}`;\n}\n\nfunction numberDate(getDate) {\n  const dateNum = getDate.split('-');\n  return Number(dateNum.join(''));\n}\nfunction comparisonDateNum() {\n  const numberDateInput = numberDate(inputData.value);\n  const numberNewDate = numberDate(newDateToDay());\n  //   console.log(numberDateInput, numberNewDate);\n  if (numberDateInput <= numberNewDate) {\n    window.alert('Please choose a date in the future');\n  }\n  return numberDateInput - numberNewDate;\n}\n"],"names":["parcelRequire","$ac4a56e0fc373d32$var$inputData","document","querySelector","$ac4a56e0fc373d32$var$btnStartTimer","$ac4a56e0fc373d32$var$dateDays","$ac4a56e0fc373d32$var$dataHours","$ac4a56e0fc373d32$var$dataMinutes","$ac4a56e0fc373d32$var$dataSeconds","$ac4a56e0fc373d32$var$numberDate","getDate","dateNum","split","Number","join","$ac4a56e0fc373d32$var$comparisonDateNum","numberDateInput","value","numberNewDate","date","Date","getFullYear","getMonth","String","padStart","$ac4a56e0fc373d32$var$newDateToDay","window","alert","querySelectorAll","forEach","element","textContent","toUpperCase","$fbklV","addEventListener","e","setAttribute","console","log","removeAttribute","ev","intervalId","setInterval","hasAttribute","clearInterval","params","dateUser","days","hours","minutes","seconds","$ac4a56e0fc373d32$var$setDate","$ac4a56e0fc373d32$var$name","ms","second","minute","hour","day","Math","floor","$ac4a56e0fc373d32$var$convertMs","mSeconds"],"version":3,"file":"02-v2.e0597845.js.map"}